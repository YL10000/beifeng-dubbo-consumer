<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:util="http://www.springframework.org/schema/util"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"   
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans        
    	http://www.springframework.org/schema/beans/spring-beans.xsd 
    	http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context.xsd    
    	http://www.springframework.org/schema/util   
    	http://www.springframework.org/schema/util/spring-util.xsd  
    	http://www.springframework.org/schema/mvc  
    	http://www.springframework.org/schema/mvc/spring-mvc.xsd     
    	http://code.alibabatech.com/schema/dubbo        
    	http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="beifeng-dubbo-consumer"  />

    <!-- 使用zookeeper注册中心暴露服务地址 -->  
    <dubbo:registry address="zookeeper://localhost:2181"/>
    <!-- 使用multicast广播注册中心暴露发现服务地址 -->
    <!-- <dubbo:registry address="multicast://224.5.6.7:1234" /> -->
    
    
    <!-- 启用spring mvc 注解-->  
    <context:annotation-config/>  
      
    <!-- MVC转换 -->   
    <mvc:annotation-driven/>  
    <mvc:default-servlet-handler/> 
    
    <dubbo:annotation package="com.ibeifeng.dubbo.consumer." />  
    
    <!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->    
    <context:component-scan base-package="com.ibeifeng.dubbo.consumer." />  
    
    <!-- 手动配置 -->
    <!-- <dubbo:reference id="personService" interface="com.ibeifeng.dubbo.service.IPersonService"/> -->
    
    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    
<!--     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
 -->    
    
    <!-- 转换成json对象配置 -->  
    <!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"    
        p:ignoreDefaultModelOnRedirect="true" >    
            <property name="messageConverters">    
                <list>    
                    <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>   
                </list>    
            </property>    
    </bean> 
     -->
     <!--  ③：对模型视图名称的解析，即在模型视图名称添加前后缀 -->    
    <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >    
         <property name="prefix" value="/WEB-INF/pages/"></property>    
         <property name="suffix" value=".jsp"></property>    
    </bean>   
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     
         该属性用来配置可上传文件的最大 byte 数 1G     
         <property name="maxUploadSize"><value>10737418240</value></property>   
    </bean>  -->

    <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
    <!-- <dubbo:reference id="personService" interface="com.ibeifeng.dubbo.service.IPersonService" /> -->
    
    
    
    <!-- 基于注解配置 -->

 
 	<dubbo:annotation package="com.ibeifeng.dubbo.consumer.action" />
</beans>